// This file is automatically generated. Any changes will be overwritten.

#include "interface.hpp"

void ReceiveInterface::from_doc(StaticJsonDocument<JSON_DOC_SIZE_RX> &doc) {
JsonVariant var0 = doc["calibration"];
if (!var0.isNull()) this->calibration = var0.as<bool>();
JsonVariant var1 = doc["control_state"];
if (!var1.isNull()) this->control_state = var1.as<bool>();
JsonVariant var2 = doc["pos_setpoint"];
if (!var2.isNull()) this->pos_setpoint = var2.as<double>();
JsonVariant var3 = doc["parameters"]["K"]["k1"];
if (!var3.isNull()) this->parameters.K.k1 = var3.as<double>();
JsonVariant var4 = doc["parameters"]["K"]["k2"];
if (!var4.isNull()) this->parameters.K.k2 = var4.as<double>();
JsonVariant var5 = doc["parameters"]["K"]["k3"];
if (!var5.isNull()) this->parameters.K.k3 = var5.as<double>();
JsonVariant var6 = doc["parameters"]["K"]["k4"];
if (!var6.isNull()) this->parameters.K.k4 = var6.as<double>();
JsonVariant var4 = doc["parameters"]["A"]["a1"];
if (!var4.isNull()) this->parameters.A.a1 = var4.as<double>();
JsonVariant var5 = doc["parameters"]["A"]["a2"];
if (!var5.isNull()) this->parameters.A.a2 = var5.as<double>();
}

StaticJsonDocument<JSON_DOC_SIZE_TX> TransmitInterface::to_doc() {
StaticJsonDocument<JSON_DOC_SIZE_TX> doc;
JsonObject wheel = doc.createNestedObject("wheel");
wheel["pos_rad"] = this->wheel.pos_rad;
wheel["pos_deriv_rad_s"] = this->wheel.pos_deriv_rad_s;
JsonObject tilt = doc.createNestedObject("tilt");
JsonObject angle_deg = tilt.createNestedObject("angle_deg");
angle_deg["from_euler"] = this->tilt.angle_deg.from_euler;
angle_deg["from_acc"] = this->tilt.angle_deg.from_acc;
JsonObject angle_deriv_deg_s = tilt.createNestedObject("angle_deriv_deg_s");
angle_deriv_deg_s["from_euler"] = this->tilt.angle_deriv_deg_s.from_euler;
angle_deriv_deg_s["from_acc"] = this->tilt.angle_deriv_deg_s.from_acc;
tilt["vel_deg_s"] = this->tilt.vel_deg_s;
JsonObject mpu = doc.createNestedObject("mpu");
mpu["gyroX"] = this->mpu.gyroX;
mpu["gyroY"] = this->mpu.gyroY;
mpu["gyroZ"] = this->mpu.gyroZ;
mpu["accX"] = this->mpu.accX;
mpu["accY"] = this->mpu.accY;
mpu["accZ"] = this->mpu.accZ;
mpu["roll"] = this->mpu.roll;
mpu["pitch"] = this->mpu.pitch;
mpu["yaw"] = this->mpu.yaw;
doc["calibrated"] = this->calibrated;
doc["loop_time_us"] = this->loop_time_us;

return doc;
}
