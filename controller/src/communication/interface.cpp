// This file is automatically generated. Any changes will be overwritten.

#include "interface.hpp"

void ReceiveInterface::from_doc(StaticJsonDocument<JSON_DOC_SIZE_RX> &doc) {
JsonVariant var0 = doc["calibration"];
if (!var0.isNull()) this->calibration = var0.as<bool>();
JsonVariant var1 = doc["control_state"];
if (!var1.isNull()) this->control_state = var1.as<bool>();
JsonVariant var2 = doc["pos_setpoint"];
if (!var2.isNull()) this->pos_setpoint = var2.as<double>();
JsonVariant var3 = doc["parameters"]["General"]["h_ms"];
if (!var3.isNull()) this->parameters.General.h_ms = var3.as<uint16_t>();
JsonVariant var4 = doc["parameters"]["General"]["alpha_off"];
if (!var4.isNull()) this->parameters.General.alpha_off = var4.as<double>();
JsonVariant var5 = doc["parameters"]["General"]["r_stop"];
if (!var5.isNull()) this->parameters.General.r_stop = var5.as<uint8_t>();
JsonVariant var6 = doc["parameters"]["General"]["r_start"];
if (!var6.isNull()) this->parameters.General.r_start = var6.as<uint8_t>();
JsonVariant var8 = doc["parameters"]["K"]["k1"];
if (!var8.isNull()) this->parameters.K.k1 = var8.as<double>();
JsonVariant var9 = doc["parameters"]["K"]["k2"];
if (!var9.isNull()) this->parameters.K.k2 = var9.as<double>();
JsonVariant var10 = doc["parameters"]["K"]["k3"];
if (!var10.isNull()) this->parameters.K.k3 = var10.as<double>();
JsonVariant var11 = doc["parameters"]["K"]["k4"];
if (!var11.isNull()) this->parameters.K.k4 = var11.as<double>();
}

StaticJsonDocument<JSON_DOC_SIZE_TX> TransmitInterface::to_doc() {
StaticJsonDocument<JSON_DOC_SIZE_TX> doc;
JsonObject wheel = doc.createNestedObject("wheel");
wheel["pos_rad"] = this->wheel.pos_rad;
wheel["pos_deriv_rad_s"] = this->wheel.pos_deriv_rad_s;
JsonObject tilt = doc.createNestedObject("tilt");
JsonObject angle_rad = tilt.createNestedObject("angle_rad");
angle_rad["from_euler"] = this->tilt.angle_rad.from_euler;
angle_rad["from_acc"] = this->tilt.angle_rad.from_acc;
tilt["vel_rad_s"] = this->tilt.vel_rad_s;
JsonObject control = doc.createNestedObject("control");
control["cycle_us"] = this->control.cycle_us;
control["u"] = this->control.u;
control["motor"] = this->control.motor;
doc["calibrated"] = this->calibrated;

return doc;
}
