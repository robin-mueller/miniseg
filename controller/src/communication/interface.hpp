// This file is automatically generated

#ifndef INTERFACE_HPP
#define INTERFACE_HPP

#include <ArduinoJson.h>

#define JSON_DOC_SIZE_RX 80
#define JSON_DOC_SIZE_TX 66

namespace Communication {

static struct ReceiveInterface {
bool controller_state;
struct {
float b1;
struct {
bool c1;
bool c2;
} b2;
} a1;

void from_doc(StaticJsonDocument<JSON_DOC_SIZE_RX> &doc) {
this->controller_state = doc["controller_state"];
this->a1.b1 = doc["a1"]["b1"];
this->a1.b2.c1 = doc["a1"]["b2"]["c1"];
this->a1.b2.c2 = doc["a1"]["b2"]["c2"];
}
} RX;

static struct TransmitInterface {
char msg[10];
bool controller_state;
struct {
float b1;
struct {
bool c1;
bool c2;
} b2;
} a1;

void to_doc(StaticJsonDocument<JSON_DOC_SIZE_TX> &doc) {
doc["msg"] = this->msg;
doc["controller_state"] = this->controller_state;
JsonObject a1 = doc.createNestedObject("a1");
a1["b1"] = this->a1.b1;
JsonObject b2 = a1.createNestedObject("b2");
b2["c1"] = this->a1.b2.c1;
b2["c2"] = this->a1.b2.c2;
}
} TX;

const DeserializationError receive();
bool transmit();

}

#endif
